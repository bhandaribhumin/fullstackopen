{"version":3,"sources":["api.js","index.js"],"names":["url","all","a","axios","get","response","data","create","person","post","update","id","put","delete","Popup","message","error","className","Filter","setFilter","onChange","event","target","value","Person","onDelete","setError","onClick","window","confirm","name","api","then","number","List","persons","filter","toLocaleLowerCase","match","map","index","key","Form","fetchPersons","setNotice","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","newPerson","findIndex","type","App","setPersons","popup","setPopup","setTimeout","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7c32273.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst url = \"/api/persons\";\n\nconst all = async () => {\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst create = (person) => {\n  return axios.post(url, person);\n};\n\nconst update = (id, person) => {\n  return axios.put(`${url}/${id}`, person);\n};\n\nconst _delete = async (id) => {\n  return axios.delete(`${url}/${id}`);\n};\n\nexport default {\n  all,\n  create,\n  update,\n  delete: _delete,\n};\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport api from \"./api\";\nimport \"./index.css\";\n\nconst NOTICE_TIME = 3000;\n\nconst Popup = ({ message, error }) => (\n  <div className={`popup${error ? \" error\" : \"\"}`}>{message}</div>\n);\n\nconst Filter = ({ setFilter }) => {\n  const onFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      filter shown with <input onChange={onFilterChange} />\n    </div>\n  );\n};\n\nconst Person = ({ person, onDelete, setError }) => {\n  const onClick = async () => {\n    if (!window.confirm(`Delete ${person.name}?`)) {\n      return;\n    }\n\n    try {\n      await api.delete(person.id).then(() => onDelete());\n    } catch (error) {\n      setError(\n        `Information about ${person.name} doesn't exist on the server (already?).`\n      );\n    }\n  };\n\n  return (\n    <p>\n      {person.name} {person.number} <button onClick={onClick}>delete</button>\n    </p>\n  );\n};\n\nconst List = ({ persons, filter, onDelete, setError }) => (\n  <>\n    {persons\n      .filter((person) => person.name.toLocaleLowerCase().match(filter || \"\"))\n      .map((person, index) => (\n        <Person\n          key={`${person.name}-${index}`}\n          person={person}\n          onDelete={onDelete}\n          setError={setError}\n        />\n      ))}\n  </>\n);\n\nconst Form = ({ persons, fetchPersons, setError, setNotice }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n\n    const id = persons.findIndex((person) => person.name === newName);\n    if (id !== -1) {\n      window.confirm(\n        `${newName} is already added to the phonebook. Replace the old number with a new one?`\n      );\n\n      await api.update(persons[id].id, newPerson);\n      await fetchPersons();\n      setNotice(`${newPerson.name} was updated.`);\n      return;\n    }\n\n    try {\n      await api.create(newPerson);\n    } catch (error) {\n      setError(error.response.data);\n      return;\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n\n    setNotice(`${newPerson.name} was added.`);\n    await fetchPersons();\n  };\n\n  const onNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const onNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <p>\n          <strong>name:</strong>{\" \"}\n          <input onChange={onNameChange} value={newName} />\n        </p>\n        <p>\n          <strong>number:</strong>{\" \"}\n          <input onChange={onNumberChange} value={newNumber} />\n        </p>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [popup, setPopup] = useState(null);\n\n  const setError = (message) => {\n    setPopup({ error: true, message });\n    setTimeout(() => {\n      setPopup(null);\n    }, NOTICE_TIME);\n  };\n\n  const setNotice = (message) => {\n    setPopup({ error: false, message });\n    setTimeout(() => {\n      setPopup(null);\n    }, NOTICE_TIME);\n  };\n\n  const fetchPersons = () => {\n    return api.all().then((persons) => {\n      setPersons(persons);\n    });\n  };\n\n  useEffect(() => {\n    fetchPersons();\n  }, []);\n\n  const onDelete = fetchPersons;\n\n  return (\n    <div>\n      {popup && <Popup message={popup.message} error={popup.error} />}\n      <h2>Phonebook</h2>\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>Add a new number</h2>\n      <Form\n        persons={persons}\n        fetchPersons={fetchPersons}\n        setNotice={setNotice}\n        setError={setError}\n      />\n      <h2>Numbers</h2>\n      <List\n        persons={persons}\n        filter={filter}\n        onDelete={onDelete}\n        setError={setError}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}